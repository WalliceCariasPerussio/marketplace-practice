services:
    mysql:
        image: mysql:5.7
        container_name: mysql
        restart: unless-stopped
        environment:
            MYSQL_DATABASE: ${DB_DATABASE}
            MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
            MYSQL_USER: ${DB_USERNAME}
            MYSQL_PASSWORD: ${DB_PASSWORD}
        ports:
            - "${FORWARD_DB_PORT:-3306}:3306"
        volumes:
            - mysql_data:/var/lib/mysql
        networks:
            - laravel-network
    app:
        build: .
        container_name: laravel-app
        restart: unless-stopped
        working_dir: /var/www/html
        volumes:
            - ./:/var/www/html
        networks:
            - laravel-network
        depends_on:
            - mysql
    webserver:
        image: nginx:alpine
        container_name: nginx
        restart: unless-stopped
        ports:
            - "${APP_PORT:-80}:80"
        volumes:
            - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
            - ./:/var/www/html
        depends_on:
            - app
        networks:
            - laravel-network
    redis:
        image: redis:alpine
        container_name: redis
        restart: unless-stopped
        networks:
            - laravel-network
    mockoon:
        image: mockoon/cli:latest
        container_name: mockoon
        volumes:
            - ./mockoon/mocketplace.json:/data:ro
        command: ["-d", "data", "-p", "3000"]
        networks:
            - laravel-network
    queue-worker-1:
        build: .
        container_name: laravel-worker-1
        restart: unless-stopped
        working_dir: /var/www/html
        command: php artisan queue:work --daemon
        volumes:
            - ./:/var/www/html
        networks:
            - laravel-network
        depends_on:
            - app
    queue-worker-2:
        build: .
        container_name: laravel-worker-2
        restart: unless-stopped
        working_dir: /var/www/html
        command: php artisan queue:work --daemon
        volumes:
            - ./:/var/www/html
        networks:
            - laravel-network
        depends_on:
            - app
volumes:
    mysql_data:
networks:
    laravel-network:
        driver: bridge
